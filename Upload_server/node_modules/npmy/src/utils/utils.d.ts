/// <reference types="node" />
import * as fs from 'fs';
export declare const exec: (...args: any[]) => Promise<null>;
export declare const glob: (...args: any[]) => Promise<string[]>;
export declare const mkdir: (...args: any[]) => Promise<null>;
export declare const mkdirSync: typeof fs.mkdirSync;
export declare const symlink: (...args: any[]) => Promise<null>;
export declare const existsSync: typeof fs.existsSync;
export declare const rmdir: (...args: any[]) => Promise<null>;
export declare const rmdirSync: (dir: any) => any;
export declare const readFile: (...args: any[]) => Promise<Buffer>;
export declare const readFileSync: typeof fs.readFileSync;
export declare const writeFileSync: typeof fs.writeFileSync;
export declare const unlinkSync: typeof fs.unlinkSync;
export declare const writeFile: (...args: any[]) => Promise<null>;
export declare const readDir: (...args: any[]) => Promise<string[]>;
export declare const readDirSync: typeof fs.readdirSync;
export declare function tmpdir(): string;
export declare function promisify<T>(fn: any, context?: any): (...args) => Promise<T>;
export declare function createSpinner(text: any, autoStart?: boolean): any;
export declare function checkNodeModulesPath(path: string): Promise<void>;
export declare function pause(ms: number): Promise<{}>;
